<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>🎃一个坏掉的番茄个人主页——魔改教程、遇坑总结</title>
      <link href="/2021/08/30/tomotoes_blog/"/>
      <url>/2021/08/30/tomotoes_blog/</url>
      
        <content type="html"><![CDATA[<h1 id="🎃一个坏掉的番茄个人主页——魔改教程、遇坑总结"><a href="#🎃一个坏掉的番茄个人主页——魔改教程、遇坑总结" class="headerlink" title="🎃一个坏掉的番茄个人主页——魔改教程、遇坑总结"></a>🎃一个坏掉的番茄个人主页——魔改教程、遇坑总结</h1><p><strong>主页模板地址</strong>：<code>https://github.com/Tomotoes/HomePage</code></p><p><strong>中文使用文档</strong>：<code>https://github.com/Tomotoes/HomePage/blob/master/README.zh_CN.md</code></p><p>配置步骤在作者的使用文档中写的以及非常详细了，我总结一下如何<strong>自定义</strong>。</p><h2 id="标题、文字、头像"><a href="#标题、文字、头像" class="headerlink" title="标题、文字、头像"></a>标题、文字、头像</h2><p>在<code>config.json</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span><span class="token property">"head"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"钟军的小黑板"</span><span class="token punctuation">,</span><span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Author:Jlex Zhong,Category:Personal Blog"</span><span class="token punctuation">,</span><span class="token property">"favicon"</span><span class="token operator">:</span> <span class="token string">"favicon.ico"</span>  <span class="token comment">// 暂未找到网站图标的修改方法</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"intro"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Jlex Zhong"</span><span class="token punctuation">,</span><span class="token property">"subtitle"</span><span class="token operator">:</span> <span class="token string">"Wellcome to my HomePage"</span><span class="token punctuation">,</span><span class="token property">"enter"</span><span class="token operator">:</span> <span class="token string">"enter"</span><span class="token punctuation">,</span><span class="token property">"supportAuthor"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"background"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">"main"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Jlex Zhong"</span><span class="token punctuation">,</span><span class="token property">"signature"</span><span class="token operator">:</span> <span class="token string">"向日葵晚上在干啥呢？"</span><span class="token punctuation">,</span> <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"assets/avatar.jpg"</span><span class="token punctuation">,</span> <span class="token comment">// 头像，将路径下的图片替换即可</span><span class="token property">"height"</span><span class="token operator">:</span> <span class="token string">"100"</span><span class="token punctuation">,</span><span class="token property">"width"</span><span class="token operator">:</span> <span class="token string">"100"</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="增加页面"><a href="#增加页面" class="headerlink" title="增加页面"></a>增加页面</h2><p>在<code>config.json</code>中</p><pre class="line-numbers language-none"><code class="language-none">"ul": {"first": {"href": "blog/","icon": "blog","text": "Blog"},"second": {"href": "blog/about/","icon": "guanyuwo","text": "About Me"},"third": {"href": "mailto:junzhong0917@163.com","icon": "email","text": "Email"},"fourth": {"href": "blog/about/",  //我添加的页面"icon": "AIRESEARCH","text": "AI Lab"},"five": {"href": "https://github.com/JlexZhong","icon": "github","text": "Github"}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>src\components\main.pug</code></p><pre class="line-numbers language-pug" data-language="pug"><code class="language-pug"><span class="token tag">ul</span><span class="token tag">li</span><span class="token tag">a<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">href</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>first<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>first<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">i<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">icon icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>first<span class="token punctuation">.</span>icon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">span<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">data-translate</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>first<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{first.text}</span><span class="token tag">li</span><span class="token tag">a<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">href</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">i<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">icon icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token punctuation">.</span>icon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">span<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">data-translate</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{second.text}</span><span class="token tag">li</span><span class="token tag">a<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">href</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>third<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>third<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> target<span class="token operator">=</span><span class="token string">"_blank"</span></span><span class="token punctuation">)</span></span></span><span class="token tag">i<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">icon icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>third<span class="token punctuation">.</span>icon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">span<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">data-translate</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>third<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{third.text}</span><span class="token tag">li</span><span class="token tag">a<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">href</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fourth<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fourth<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> target<span class="token operator">=</span><span class="token string">"_blank"</span></span><span class="token punctuation">)</span></span></span><span class="token tag">i<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">icon icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fourth<span class="token punctuation">.</span>icon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">span<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">data-translate</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fourth<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{fourth.text}</span><span class="token tag">li</span><span class="token tag">a<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">href</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>five<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>five<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> target<span class="token operator">=</span><span class="token string">"_blank"</span></span><span class="token punctuation">)</span></span></span><span class="token tag">i<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">class</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">icon icon-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>five<span class="token punctuation">.</span>icon<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span><span class="token tag">span<span class="token attributes"><span class="token punctuation">(</span><span class="token attr-name">data-translate</span><span class="token punctuation">=</span><span class="token attr-value"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>five<span class="token punctuation">.</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span><span class="token punctuation">)</span></span></span> <span class="token plain-text">#{five.text}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更换图标"><a href="#更换图标" class="headerlink" title="更换图标"></a>更换图标</h2><ol><li>到阿里矢量图标网站中找到自己的图标，并添加到一个项目中。<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></li><li>把图标调成白色</li><li>进入项目设置，把这些勾选上</li><li><img src="/2021/08/30/tomotoes_blog/setting.png"></li><li>点击Font Class, 查看在线链接，点击该链接</li><li><img src="/2021/08/30/tomotoes_blog/iconfont.png"></li><li>复制链接中的所有内容，除了以下部分，其余全部替换掉。</li></ol><pre class="line-numbers language-none"><code class="language-none">.icon {display: block;width: 1.5em;height: 1.5em;margin: 0 auto;fill: currentColor;font-family: 'iconfont' !important;font-size: inherit;font-style: normal;-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后去<code>config.json</code>中修改图标的名称，不用加<code>icon-</code>。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github免费搭建个人博客详细教程</title>
      <link href="/2021/08/24/Building-a-Blog/"/>
      <url>/2021/08/24/Building-a-Blog/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Github免费搭建个人博客详细教程"><a href="#Hexo-Github免费搭建个人博客详细教程" class="headerlink" title="Hexo+Github免费搭建个人博客详细教程"></a>Hexo+Github免费搭建个人博客详细教程</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/2021/08/24/Building-a-Blog/1.png"></p><p><img src="/2021/08/24/Building-a-Blog/2.png"></p><p><img src="/2021/08/24/Building-a-Blog/3.png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>安装<strong>Node.js</strong>，一直默认。输入：（查看是否安装正确）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">node -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>添加环境变量： <code>C:\Program Files\nodejs\ </code></p></li><li><p>环境变量：<code>C:\Users\26780\AppData\Roaming\npm</code></p></li></ul><h3 id="配置npm"><a href="#配置npm" class="headerlink" title="配置npm"></a>配置npm</h3><p>查看<strong>npm</strong>是否安装成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>出现<strong>BUG</strong>：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> install出现一直停留在“fetchMetadata: sill resolveWithNewModule find-cache-dir@“<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>解决：更换国内镜像源</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">更换成淘宝的源<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org – 配置后可通过下面方式来验证是否成功 <span class="token function">npm</span> config get registry – 或npm info express<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装<strong>hexo</strong></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>若出现warning，这是募捐提示，忽略即可</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">run <span class="token variable"><span class="token variable">`</span><span class="token function">npm</span> fund<span class="token variable">`</span></span> <span class="token keyword">for</span> details<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不想看到，输入命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --no-fund<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p><strong>Github</strong>安装，教程网上很多请自行寻找，并配置好<strong>SSH-Key</strong></p><h2 id="Hexo搭建"><a href="#Hexo搭建" class="headerlink" title="Hexo搭建"></a>Hexo搭建</h2><ol><li><p>建立空文件夹，我的是Blog，将来会在这个文件夹内存放与博客有关的内容</p></li><li><p>打开GIt Bash 或者命令行，输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>文件夹内会出现一些配置文件</p><ul><li><code>node_modules:</code> 依赖包</li><li><code>public：</code>存放生成的页面</li><li><code>scaffolds：</code>生成文章的一些模板</li><li><code>source：</code>用来存放你的文章</li><li><code>themes：</code><strong>主题</strong></li><li><code>_config.yml:</code> 博客的<strong>配置文件</strong></li></ul></li><li><p>执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo new hello Hexo    //新建一篇名为<span class="token string">"hello Hexo"</span>的博客hexo g                 //生成静态文件hexo s                 //本地部署预览<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>会输出：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">INFO  Hexo is running at http://localhost:4000 <span class="token builtin class-name">.</span> Press Ctrl+C to stop.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可能会出现加载不了的情况，因为4000端口太常用了，导致冲突。使用：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server -p <span class="token number">5000</span> //更改端口<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a><strong>hexo常用命令</strong></h3><ul><li>初始化</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo -g //安装Hexo<span class="token function">npm</span> update hexo -g //升级 hexo init //初始化博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>命令简写</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo n <span class="token string">"我的博客"</span> <span class="token operator">=</span> hexo new <span class="token string">"我的博客"</span> //新建文章hexo g <span class="token operator">=</span> hexo generate //生成hexo s <span class="token operator">=</span> hexo server //启动服务预览hexo d <span class="token operator">=</span> hexo deploy //部署<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>其他</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo server //Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s //静态模式hexo server -p <span class="token number">5000</span> //更改端口hexo server -i <span class="token number">192.168</span>.1.1 //自定义 IPhexo clean //清除缓存，若是网页正常情况下可以忽略这条命令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h2><ol><li>修改Blog文件夹下的**_config.yml**，在末尾修改成如下格式：</li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/one-command-deployment</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token key atrule">type</span><span class="token punctuation">:</span> git<span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/JlexZhong/JlexZhong.github.io.git<span class="token key atrule">branch</span><span class="token punctuation">:</span> main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>   repo后的地址就是博客仓库的https地址</p><ol start="2"><li>安装git部署插件：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>然后输入命令：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean //清理静态文件hexo g //生成静态文件hexo d //部署<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="4"><li><p>出现<strong>bug</strong>：</p><p> 解决：</p><ul><li><p>如果不是代理问题，在_config.yml文件中把repo：后的地址改为<a href="mailto:git@github.com">git@github.com</a>:JlexZhong/JlexZhong.github.io.git</p></li><li><p>是代理问题，清除代理</p></li></ul></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">remote: Permission to JlexZhong/JlexZhong.github.io.git denied to junz2001.fatal: unable to access <span class="token string">'https://github.com/JlexZhong/JlexZhong.github.io.git/'</span><span class="token builtin class-name">:</span> The requested URL returned error: <span class="token number">403</span><span class="token punctuation">[</span>41mFATAL<span class="token punctuation">[</span>49m <span class="token punctuation">{</span>err: Error: Spawn failedat ChildProcess.<span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span> <span class="token punctuation">(</span>E:<span class="token punctuation">\</span>Blog<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>hexo-util<span class="token punctuation">\</span>lib<span class="token punctuation">\</span>spawn.js:51:21<span class="token punctuation">)</span>at ChildProcess.emit <span class="token punctuation">(</span>events.js:400:28<span class="token punctuation">)</span>at ChildProcess.cp.emit <span class="token punctuation">(</span>E:<span class="token punctuation">\</span>Blog<span class="token punctuation">\</span>node_modules<span class="token punctuation">\</span>cross-spawn<span class="token punctuation">\</span>lib<span class="token punctuation">\</span>enoent.js:34:29<span class="token punctuation">)</span>at Process.ChildProcess._handle.onexit <span class="token punctuation">(</span>internal/child_process.js:277:12<span class="token punctuation">)</span> <span class="token punctuation">{</span>code: <span class="token number">128</span><span class="token punctuation">}</span><span class="token punctuation">}</span> Something's wrong. Maybe you can <span class="token function">find</span> the solution here: %s <span class="token punctuation">[</span>4mhttps://hexo.io/docs/troubleshooting.html<span class="token punctuation">[</span>24m<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><p>此时博客已经上线啦！可以通过网络访问了。浏览器输入博客网站地址<strong>xxxx.github.io</strong></p></li><li><p><strong>修改域名</strong>：</p><p>现在你的个人网站的地址是<code>yourname.github.io</code>，如果觉得这个网址逼格不太够，这就需要你设置个人域名了。但是需要花钱。</p><blockquote><p>我没有选择购买域名，等后期再来更新吧</p></blockquote></li></ol><h3 id="发布博客："><a href="#发布博客：" class="headerlink" title="发布博客："></a>发布博客：</h3><ul><li>先<code>hexo new post "article title"</code>新建一篇文章，</li><li>在博客文件夹，<code>Blog/source/_posts</code>目录下回多出一个Markdown文件，编写完markdown文件后，保存</li><li>根目录下输入<code>hexo g</code>生成静态网页</li><li>然后输入<code>hexo s</code>可以本地预览效果</li><li>最后输入<code>hexo d</code>上传到<code>github</code>上</li></ul><h3 id="config-yml文件的修改建议："><a href="#config-yml文件的修改建议：" class="headerlink" title="_config.yml文件的修改建议："></a><code>_config.yml</code><strong>文件的修改建议</strong>：</h3><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li><li><code>subtitle</code>选项：在我使用的主题当中即为网页首页中间的字体块，若为空将显示为<strong>subtitle</strong></li><li><code>post_asset_folder</code>选项设置为：true。当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</li></ul><h2 id="向hexo博客中插入图片"><a href="#向hexo博客中插入图片" class="headerlink" title="向hexo博客中插入图片"></a>向hexo博客中插入图片</h2><ul><li><p>进入博客根目录配置<code>_config.yml</code>:将<code>post_asset_folder: false·</code>改为<code>post_asset_folder: true</code></p></li><li><p>安装插件:</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> https://github.com/CodeFalling/hexo-asset-image -- save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>此时再执行命令 :</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo n article_name <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>创建新的文章，在 source/_posts 中会生成文章 post_name.md 和同名文件夹 post_name,我们将文章中所使用到的将图片资源均放在 post_name 中，这时就可以在文章中使用相对路径引用图片资源了</p></li><li><p>添加图片:在想添加的位置写入<code>![](图片名字.图片格式)</code>,例如<code>![](1.png)</code></p></li></ul><h2 id="文章Front-matter"><a href="#文章Front-matter" class="headerlink" title="文章Front-matter"></a>文章Front-matter</h2><p><code>Front-matter</code> 是<code>md</code>文件最上方以 <code>---</code>分隔的区域，用于指定个别文件的变量.<code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><h3 id="选项详解"><a href="#选项详解" class="headerlink" title="选项详解"></a>选项详解</h3><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>hide</td><td><code>false</code></td><td>隐藏文章，如果<code>hide</code>值为<code>true</code>，则文章不会在首页显示</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hide</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="主题美化"><a href="#主题美化" class="headerlink" title="主题美化"></a>主题美化</h2><ol><li><p>在哪找？</p><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></li><li><p>cd 进blog文件夹根目录，输入：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone 主题http链接 themes/主题名称<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>   主题会下载到themes文件夹下。</p><ol start="3"><li>我用的是<a href="https://github.com/blinkfox/hexo-theme-matery%EF%BC%8C%E4%B8%BB%E9%A2%98%E5%90%8D%E7%A7%B0%E6%98%AFblinkfox%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BE%93%E5%85%A5%EF%BC%9A">https://github.com/blinkfox/hexo-theme-matery，主题名称是blinkfox，所以输入：</a></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery themes/blinkfox<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="4"><li><p>在下载的主题文件夹内有<strong>使用文档</strong>，中英文版本十分友好。</p></li><li><p>切换主题，找到根目录的_config.yml，将<code>landscape</code>改为<code>blinkfox</code>，也就是改为我们下载的主题名字：</p></li></ol><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> landscape<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>然后再次部署网站，<code>hexo g</code>，<code>hexo d</code></li></ol><h3 id="主题更多个性化"><a href="#主题更多个性化" class="headerlink" title="主题更多个性化"></a>主题更多个性化</h3><p>我们可以通过修改根目录或者主题目录下的<code>_config.yml</code>，实现更多的<strong>个性化</strong>。当然，不同的主题的语法还有不同，修改方法请参考各主题的使用文档。例如：</p><ul><li><p><strong>代码高亮</strong></p><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p></li></ul><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span><span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span><span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>文章字数统计插件</strong>（建议安装）</p><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置文章字数统计为 true.</span><span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 设置站点文章总字数统计为 true.</span><span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读时长.</span><span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 阅读次数.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>更多请查看主题使用文档</li></ul><h2 id="Github-amp-Coding-Pages-双部署"><a href="#Github-amp-Coding-Pages-双部署" class="headerlink" title="Github &amp; Coding Pages 双部署"></a>Github &amp; Coding Pages 双部署</h2><p>后续更新</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://reclusew.github.io/2021/08/12/blog-setup/">https://reclusew.github.io/2021/08/12/blog-setup/</a></p><p><a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-65">https://sunhwee.com/posts/6e8839eb.html#toc-heading-65</a></p><p><a href="https://blog.csdn.net/weixin_42334475/article/details/101055364?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.control">https://blog.csdn.net/weixin_42334475/article/details/101055364?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-5.control</a></p><p><a href="https://blog.csdn.net/Fitz1318/article/details/86548129?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162977080816780269848140%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162977080816780269848140&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-86548129.pc_search_result_control_group&amp;utm_term=hexo+%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87&amp;spm=1018.2226.3001.4187">https://blog.csdn.net/Fitz1318/article/details/86548129?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162977080816780269848140%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=162977080816780269848140&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-86548129.pc_search_result_control_group&amp;utm_term=hexo+%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87&amp;spm=1018.2226.3001.4187</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>看到这里，相信您已经搭建出自己的个人博客网站了！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搭建博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2021/08/23/first_blog/"/>
      <url>/2021/08/23/first_blog/</url>
      
        <content type="html"><![CDATA[<p>大家好，这是我的第一篇博客，见证了自建个人博客的成功。</p><p>接下来，我将在这里发布我的学习记录和问题，以及一些项目，敬请期待！</p><p>本人非科班选手，如有不足还望各位指正哦！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/23/hello-world/"/>
      <url>/2021/08/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
